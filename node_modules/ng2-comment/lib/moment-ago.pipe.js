"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var MomentAgoPipe = (function () {
    function MomentAgoPipe() {
    }
    MomentAgoPipe.prototype.transform = function (value) {
        var oneSecond = 1000;
        var oneMinute = 60 * oneSecond;
        var oneHour = 60 * oneMinute;
        var oneDay = 24 * oneHour;
        var diff = Date.now() - new Date(value).getTime();
        if (diff > oneDay)
            return this.stringify(diff, oneDay, 'd');
        if (diff > oneHour)
            return this.stringify(diff, oneHour, 'h');
        if (diff > oneMinute)
            return this.stringify(diff, oneMinute, 'm');
        return this.stringify(diff, oneSecond, 's');
    };
    MomentAgoPipe.prototype.stringify = function (timeDiff, divisor, unit) {
        var time = Math.floor(timeDiff / divisor);
        return time + unit + ' ago';
    };
    MomentAgoPipe = __decorate([
        core_1.Pipe({
            name: 'momentAgo'
        }), 
        __metadata('design:paramtypes', [])
    ], MomentAgoPipe);
    return MomentAgoPipe;
}());
exports.MomentAgoPipe = MomentAgoPipe;
//# sourceMappingURL=moment-ago.pipe.js.map