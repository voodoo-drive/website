{"version":3,"file":"ngx-paginate.js","sources":["ts/ngx-paginate.ts","ts/src/app/ngx-paginate.module.ts","ts/src/app/paginate.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxPaginateModule} from './public_api';\n\nexport {NgxPaginateComponent as Éµa} from './src/app/paginate.component';","import { NgxPaginateComponent } from './paginate.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport class NgxPaginateModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxPaginateComponent],\n  declarations: [NgxPaginateComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxPaginateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPaginateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPaginateModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, DoCheck, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nexport class PageState {\n  currentPage: number;\n  pageSize: number;\n  totalItems?: number;\n  numberOfPages?: number;\n}\n\nfunction PageState_tsickle_Closure_declarations() {\n/** @type {?} */\nPageState.prototype.currentPage;\n/** @type {?} */\nPageState.prototype.pageSize;\n/** @type {?} */\nPageState.prototype.totalItems;\n/** @type {?} */\nPageState.prototype.numberOfPages;\n}\n\nexport class PaginateOptions {\n  spanPages?: number; //  number of how many pages additionally will be shown on left and right\n  firstPage?: boolean;\n  previousPage?: boolean;\n  nextPage?: boolean;\n  lastPage?: boolean;\n  pageSizes?: {\n    value: number,\n    display: string\n  }[];\n  titles?: {\n    firstPage?: string;\n    lastPage?: string;\n    previousPage?: string;\n    nextPage?: string;\n    pageSize?: string;\n  };\n}\n\nfunction PaginateOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginateOptions.prototype.spanPages;\n/** @type {?} */\nPaginateOptions.prototype.firstPage;\n/** @type {?} */\nPaginateOptions.prototype.previousPage;\n/** @type {?} */\nPaginateOptions.prototype.nextPage;\n/** @type {?} */\nPaginateOptions.prototype.lastPage;\n/** @type {?} */\nPaginateOptions.prototype.pageSizes;\n/** @type {?} */\nPaginateOptions.prototype.titles;\n}\n\n\nconst /** @type {?} */ defaults: PaginateOptions = {\n  spanPages : 2,\n  previousPage: true,\n  nextPage: true,\n  firstPage: true,\n  lastPage: true,\n  titles: {\n    firstPage: 'First',\n    previousPage: 'Previous',\n    lastPage: 'Last',\n    nextPage: 'Next',\n    pageSize: 'Items per page'\n  },\n  pageSizes: [{\n    value: 5,\n    display: '5'\n  }, {\n    value: 10,\n    display: '10'\n  }, {\n    value: 15,\n    display: '15'\n  }]\n};\nexport class NgxPaginateComponent implements OnInit, DoCheck, OnChanges {\n\n  internalOptions: PaginateOptions;\n   options: PaginateOptions;\n\n   page: PageState;\n   pageChange = new EventEmitter<PageState>();\nconstructor() {\n    this.range = [];\n  }\n\n  range: number[];\n/**\n * @return {?}\n */\nngOnInit() {\n    this.range = [];\n    this.setOptions();\n\n    this.calculateRange();\n    this.pageChange.emit(this.page);\n  }\n/**\n * @return {?}\n */\nsetOptions() {\n    if (!this.options) {\n      this.options = defaults;\n    }\n\n    if (!this.options.titles) {\n      this.options.titles = defaults.titles;\n    }\n    this.internalOptions = {\n      spanPages: this.options.spanPages || defaults.spanPages,\n      previousPage: this.options.previousPage !== undefined ? this.options.previousPage : defaults.previousPage,\n      nextPage: this.options.nextPage !== undefined ? this.options.nextPage : defaults.nextPage,\n      firstPage: this.options.firstPage !== undefined ? this.options.firstPage : defaults.firstPage,\n      lastPage: this.options.lastPage !== undefined ? this.options.lastPage : defaults.lastPage,\n      titles: {\n        firstPage: this.options.titles.firstPage || defaults.titles.firstPage,\n        previousPage: this.options.titles.previousPage || defaults.titles.previousPage,\n        lastPage: this.options.titles.lastPage || defaults.titles.lastPage,\n        nextPage: this.options.titles.nextPage || defaults.titles.nextPage,\n        pageSize: this.options.titles.pageSize || defaults.titles.pageSize\n      },\n      pageSizes: this.options.pageSizes || defaults.pageSizes.slice()\n    };\n  }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nsetPageSize(pageSize) {\n    this.page.pageSize = parseInt(pageSize, 10);\n    this.pageChange.emit(this.page);\n  }\n/**\n * @return {?}\n */\ncalculateRange() {\n    this.range.length = 0;\n    this.page.numberOfPages = Math.ceil(this.page.totalItems / this.page.pageSize);\n\n    if (this.page.numberOfPages === 0) {\n      this.page.numberOfPages = 1;\n    }\n    let /** @type {?} */ upperSpan;\n\n    // if we can add span in front of current page, add it\n    if (this.page.currentPage - this.options.spanPages > 0) {\n      for (let /** @type {?} */ i = this.page.currentPage - this.options.spanPages; i < this.page.currentPage; i++) {\n        this.range.push(i);\n      }\n      upperSpan = this.options.spanPages;\n    } else {\n      // if not, add as much as you can after it and adjust upper span\n      upperSpan = this.options.spanPages * 2;\n      for (let /** @type {?} */ i = 1; i < this.page.currentPage; i++) {\n        this.range.push(i);\n        upperSpan--;\n      }\n    }\n\n    this.range.push(this.page.currentPage);\n\n    if (this.page.currentPage + upperSpan <= this.page.numberOfPages) {\n      for (let /** @type {?} */ i = this.page.currentPage + 1; i <= this.page.currentPage + upperSpan; i++) {\n        this.range.push(i);\n      }\n    } else {\n      for (let /** @type {?} */ i = this.page.currentPage + 1; i <= this.page.numberOfPages; i++) {\n        this.range.push(i);\n        upperSpan--;\n      }\n\n      if (upperSpan > 0 ) {\n        // something is still left, prepend it to array (only if bigger than 0)\n        while (upperSpan > 0 && this.range[0] - 1 > 0) {\n          this.range.unshift(this.range[0] - 1);\n          upperSpan--;\n        }\n\n      }\n    }\n\n  }\n/**\n * @param {?} page\n * @return {?}\n */\nsetPage(page: number) {\n    if (this.page.currentPage !== page) {\n      this.page.currentPage = page;\n      this.calculateRange();\n      this.pageChange.emit(this.page);\n    }\n  }\n/**\n * @return {?}\n */\npreviousPage() {\n    if (this.page.currentPage > 1) {\n      this.setPage(this.page.currentPage - 1);\n    }\n  }\n/**\n * @return {?}\n */\nnextPage() {\n    if (this.page.currentPage < this.page.numberOfPages) {\n      this.setPage(this.page.currentPage + 1);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this.page) {\n      this.calculateRange();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (changes['options'] && changes['options'].currentValue) {\n      this.setOptions();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-paginate',\n  template: `\n    <div class=\"page-size-selection\">\n      <span>{{internalOptions.titles.pageSize}}</span>\n      <select (change)=\"setPageSize($event.target.value)\">\n        <option *ngFor=\"let opt of internalOptions.pageSizes\">{{opt.display}}</option>\n      </select>\n    </div>\n    <div class=\"pages\">\n      <span\n        class=\"first-page-button page-entry\"\n        *ngIf=\"internalOptions.firstPage\"\n        (click)=\"setPage(1)\"\n        [ngClass]=\"{'disabled':page.currentPage === 1}\">\n        {{internalOptions.titles.firstPage}}\n      </span>\n      <span\n        class=\"prev-button page-entry\"\n        *ngIf=\"internalOptions.previousPage\"\n        (click)=\"previousPage()\"\n        [ngClass]=\"{'disabled':page.currentPage === 1}\">\n        {{internalOptions.titles.previousPage}}\n      </span>\n      <span class=\"page-selection\">\n        <span\n          *ngFor=\"let num of range\"\n          class=\"page-entry\"\n          [ngClass]=\"{'active': num === page.currentPage}\"\n          (click)=\"setPage(num)\">{{num}}</span>\n      </span>\n      <span\n        class=\"next-button page-entry\"\n        *ngIf=\"internalOptions.nextPage\"\n        (click)=\"nextPage()\"\n        [ngClass]=\"{'disabled':page.currentPage === page.numberOfPages}\">\n          {{internalOptions.titles.nextPage}}\n      </span>\n      <span\n        class=\"last-page-button page-entry\"\n        *ngIf=\"internalOptions.lastPage\"\n        (click)=\"setPage(page.numberOfPages)\"\n        [ngClass]=\"{'disabled':page.currentPage === page.numberOfPages}\">\n        {{internalOptions.titles.lastPage}}\n      </span>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      width: 100%;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between; }\n\n    .page-selection {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n\n    select {\n      height: 30px; }\n\n    .pages {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n\n    .page-entry {\n      height: 30px;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      border: none;\n      background-color: #EEEDEE;\n      margin: 0 1px;\n      cursor: pointer;\n      white-space: nowrap;\n      min-width: 14px;\n      width: auto;\n      padding: 0 8px; }\n      .page-entry.active {\n        color: white;\n        background-color: #b6b6b6;\n        cursor: default; }\n      .page-entry.disabled {\n        opacity: 0.3;\n        cursor: default; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'page': [{ type: Input },],\n'pageChange': [{ type: Output },],\n};\n}\n\nfunction NgxPaginateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPaginateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPaginateComponent.ctorParameters;\n/** @type {?} */\nNgxPaginateComponent.propDecorators;\n/** @type {?} */\nNgxPaginateComponent.prototype.internalOptions;\n/** @type {?} */\nNgxPaginateComponent.prototype.options;\n/** @type {?} */\nNgxPaginateComponent.prototype.page;\n/** @type {?} */\nNgxPaginateComponent.prototype.pageChange;\n/** @type {?} */\nNgxPaginateComponent.prototype.range;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}
