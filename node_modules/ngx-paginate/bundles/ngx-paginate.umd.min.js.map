{"version":3,"file":"ngx-paginate.umd.min.js","sources":["~/ngx-paginate/src/app/paginate.component.ts","~/ngx-paginate/src/app/ngx-paginate.module.ts"],"sourcesContent":["import { Component, DoCheck, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nexport class PageState {\n  currentPage: number;\n  pageSize: number;\n  totalItems?: number;\n  numberOfPages?: number;\n}\n\nfunction PageState_tsickle_Closure_declarations() {\n/** @type {?} */\nPageState.prototype.currentPage;\n/** @type {?} */\nPageState.prototype.pageSize;\n/** @type {?} */\nPageState.prototype.totalItems;\n/** @type {?} */\nPageState.prototype.numberOfPages;\n}\n\nexport class PaginateOptions {\n  spanPages?: number; //  number of how many pages additionally will be shown on left and right\n  firstPage?: boolean;\n  previousPage?: boolean;\n  nextPage?: boolean;\n  lastPage?: boolean;\n  pageSizes?: {\n    value: number,\n    display: string\n  }[];\n  titles?: {\n    firstPage?: string;\n    lastPage?: string;\n    previousPage?: string;\n    nextPage?: string;\n    pageSize?: string;\n  };\n}\n\nfunction PaginateOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nPaginateOptions.prototype.spanPages;\n/** @type {?} */\nPaginateOptions.prototype.firstPage;\n/** @type {?} */\nPaginateOptions.prototype.previousPage;\n/** @type {?} */\nPaginateOptions.prototype.nextPage;\n/** @type {?} */\nPaginateOptions.prototype.lastPage;\n/** @type {?} */\nPaginateOptions.prototype.pageSizes;\n/** @type {?} */\nPaginateOptions.prototype.titles;\n}\n\n\nconst /** @type {?} */ defaults: PaginateOptions = {\n  spanPages : 2,\n  previousPage: true,\n  nextPage: true,\n  firstPage: true,\n  lastPage: true,\n  titles: {\n    firstPage: 'First',\n    previousPage: 'Previous',\n    lastPage: 'Last',\n    nextPage: 'Next',\n    pageSize: 'Items per page'\n  },\n  pageSizes: [{\n    value: 5,\n    display: '5'\n  }, {\n    value: 10,\n    display: '10'\n  }, {\n    value: 15,\n    display: '15'\n  }]\n};\nexport class NgxPaginateComponent implements OnInit, DoCheck, OnChanges {\n\n  internalOptions: PaginateOptions;\n   options: PaginateOptions;\n\n   page: PageState;\n   pageChange = new EventEmitter<PageState>();\nconstructor() {\n    this.range = [];\n  }\n\n  range: number[];\n/**\n * @return {?}\n */\nngOnInit() {\n    this.range = [];\n    this.setOptions();\n\n    this.calculateRange();\n    this.pageChange.emit(this.page);\n  }\n/**\n * @return {?}\n */\nsetOptions() {\n    if (!this.options) {\n      this.options = defaults;\n    }\n\n    if (!this.options.titles) {\n      this.options.titles = defaults.titles;\n    }\n    this.internalOptions = {\n      spanPages: this.options.spanPages || defaults.spanPages,\n      previousPage: this.options.previousPage !== undefined ? this.options.previousPage : defaults.previousPage,\n      nextPage: this.options.nextPage !== undefined ? this.options.nextPage : defaults.nextPage,\n      firstPage: this.options.firstPage !== undefined ? this.options.firstPage : defaults.firstPage,\n      lastPage: this.options.lastPage !== undefined ? this.options.lastPage : defaults.lastPage,\n      titles: {\n        firstPage: this.options.titles.firstPage || defaults.titles.firstPage,\n        previousPage: this.options.titles.previousPage || defaults.titles.previousPage,\n        lastPage: this.options.titles.lastPage || defaults.titles.lastPage,\n        nextPage: this.options.titles.nextPage || defaults.titles.nextPage,\n        pageSize: this.options.titles.pageSize || defaults.titles.pageSize\n      },\n      pageSizes: this.options.pageSizes || defaults.pageSizes.slice()\n    };\n  }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nsetPageSize(pageSize) {\n    this.page.pageSize = parseInt(pageSize, 10);\n    this.pageChange.emit(this.page);\n  }\n/**\n * @return {?}\n */\ncalculateRange() {\n    this.range.length = 0;\n    this.page.numberOfPages = Math.ceil(this.page.totalItems / this.page.pageSize);\n\n    if (this.page.numberOfPages === 0) {\n      this.page.numberOfPages = 1;\n    }\n    let /** @type {?} */ upperSpan;\n\n    // if we can add span in front of current page, add it\n    if (this.page.currentPage - this.options.spanPages > 0) {\n      for (let /** @type {?} */ i = this.page.currentPage - this.options.spanPages; i < this.page.currentPage; i++) {\n        this.range.push(i);\n      }\n      upperSpan = this.options.spanPages;\n    } else {\n      // if not, add as much as you can after it and adjust upper span\n      upperSpan = this.options.spanPages * 2;\n      for (let /** @type {?} */ i = 1; i < this.page.currentPage; i++) {\n        this.range.push(i);\n        upperSpan--;\n      }\n    }\n\n    this.range.push(this.page.currentPage);\n\n    if (this.page.currentPage + upperSpan <= this.page.numberOfPages) {\n      for (let /** @type {?} */ i = this.page.currentPage + 1; i <= this.page.currentPage + upperSpan; i++) {\n        this.range.push(i);\n      }\n    } else {\n      for (let /** @type {?} */ i = this.page.currentPage + 1; i <= this.page.numberOfPages; i++) {\n        this.range.push(i);\n        upperSpan--;\n      }\n\n      if (upperSpan > 0 ) {\n        // something is still left, prepend it to array (only if bigger than 0)\n        while (upperSpan > 0 && this.range[0] - 1 > 0) {\n          this.range.unshift(this.range[0] - 1);\n          upperSpan--;\n        }\n\n      }\n    }\n\n  }\n/**\n * @param {?} page\n * @return {?}\n */\nsetPage(page: number) {\n    if (this.page.currentPage !== page) {\n      this.page.currentPage = page;\n      this.calculateRange();\n      this.pageChange.emit(this.page);\n    }\n  }\n/**\n * @return {?}\n */\npreviousPage() {\n    if (this.page.currentPage > 1) {\n      this.setPage(this.page.currentPage - 1);\n    }\n  }\n/**\n * @return {?}\n */\nnextPage() {\n    if (this.page.currentPage < this.page.numberOfPages) {\n      this.setPage(this.page.currentPage + 1);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this.page) {\n      this.calculateRange();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (changes['options'] && changes['options'].currentValue) {\n      this.setOptions();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-paginate',\n  template: `\n    <div class=\"page-size-selection\">\n      <span>{{internalOptions.titles.pageSize}}</span>\n      <select (change)=\"setPageSize($event.target.value)\">\n        <option *ngFor=\"let opt of internalOptions.pageSizes\">{{opt.display}}</option>\n      </select>\n    </div>\n    <div class=\"pages\">\n      <span\n        class=\"first-page-button page-entry\"\n        *ngIf=\"internalOptions.firstPage\"\n        (click)=\"setPage(1)\"\n        [ngClass]=\"{'disabled':page.currentPage === 1}\">\n        {{internalOptions.titles.firstPage}}\n      </span>\n      <span\n        class=\"prev-button page-entry\"\n        *ngIf=\"internalOptions.previousPage\"\n        (click)=\"previousPage()\"\n        [ngClass]=\"{'disabled':page.currentPage === 1}\">\n        {{internalOptions.titles.previousPage}}\n      </span>\n      <span class=\"page-selection\">\n        <span\n          *ngFor=\"let num of range\"\n          class=\"page-entry\"\n          [ngClass]=\"{'active': num === page.currentPage}\"\n          (click)=\"setPage(num)\">{{num}}</span>\n      </span>\n      <span\n        class=\"next-button page-entry\"\n        *ngIf=\"internalOptions.nextPage\"\n        (click)=\"nextPage()\"\n        [ngClass]=\"{'disabled':page.currentPage === page.numberOfPages}\">\n          {{internalOptions.titles.nextPage}}\n      </span>\n      <span\n        class=\"last-page-button page-entry\"\n        *ngIf=\"internalOptions.lastPage\"\n        (click)=\"setPage(page.numberOfPages)\"\n        [ngClass]=\"{'disabled':page.currentPage === page.numberOfPages}\">\n        {{internalOptions.titles.lastPage}}\n      </span>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      width: 100%;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: justify;\n          -ms-flex-pack: justify;\n              justify-content: space-between; }\n\n    .page-selection {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center; }\n\n    select {\n      height: 30px; }\n\n    .pages {\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex; }\n\n    .page-entry {\n      height: 30px;\n      display: -webkit-box;\n      display: -ms-flexbox;\n      display: flex;\n      -webkit-box-align: center;\n          -ms-flex-align: center;\n              align-items: center;\n      -webkit-box-pack: center;\n          -ms-flex-pack: center;\n              justify-content: center;\n      border: none;\n      background-color: #EEEDEE;\n      margin: 0 1px;\n      cursor: pointer;\n      white-space: nowrap;\n      min-width: 14px;\n      width: auto;\n      padding: 0 8px; }\n      .page-entry.active {\n        color: white;\n        background-color: #b6b6b6;\n        cursor: default; }\n      .page-entry.disabled {\n        opacity: 0.3;\n        cursor: default; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'page': [{ type: Input },],\n'pageChange': [{ type: Output },],\n};\n}\n\nfunction NgxPaginateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPaginateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPaginateComponent.ctorParameters;\n/** @type {?} */\nNgxPaginateComponent.propDecorators;\n/** @type {?} */\nNgxPaginateComponent.prototype.internalOptions;\n/** @type {?} */\nNgxPaginateComponent.prototype.options;\n/** @type {?} */\nNgxPaginateComponent.prototype.page;\n/** @type {?} */\nNgxPaginateComponent.prototype.pageChange;\n/** @type {?} */\nNgxPaginateComponent.prototype.range;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgxPaginateComponent } from './paginate.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nexport class NgxPaginateModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxPaginateComponent],\n  declarations: [NgxPaginateComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxPaginateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxPaginateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxPaginateModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["defaults","spanPages","previousPage","nextPage","firstPage","lastPage","titles","pageSize","pageSizes","value","display","NgxPaginateComponent","this","pageChange","EventEmitter","range","prototype","ngOnInit","setOptions","calculateRange","emit","page","options","internalOptions","undefined","slice","setPageSize","parseInt","upperSpan","length","numberOfPages","Math","ceil","totalItems","currentPage","i","push","unshift","setPage","ngDoCheck","ngOnChanges","changes","currentValue","decorators","type","Component","args","selector","template","styles","ctorParameters","propDecorators","Input","Output","NgxPaginateModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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"}
