[{"__symbolic":"module","version":4,"metadata":{"Func":{"__symbolic":"interface"},"CoolHttp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":15,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":26,"character":29}]}],"registerBaseUrl":[{"__symbolic":"method"}],"deRegisterBaseUrl":[{"__symbolic":"method"}],"setWithCredentials":[{"__symbolic":"method"}],"registerGlobalHeader":[{"__symbolic":"method"}],"deregisterGlobalHeader":[{"__symbolic":"method"}],"removeAllRegisteredGlobalHeaders":[{"__symbolic":"method"}],"registerRequestInterceptor":[{"__symbolic":"method"}],"deregisterRequestInterceptor":[{"__symbolic":"method"}],"registerResponseInterceptor":[{"__symbolic":"method"}],"deregisterResponseInterceptor":[{"__symbolic":"method"}],"sendCookieValueInCustomHeader":[{"__symbolic":"method"}],"getAsync":[{"__symbolic":"method"}],"postAsync":[{"__symbolic":"method"}],"putAsync":[{"__symbolic":"method"}],"deleteAsync":[{"__symbolic":"method"}],"patchAsync":[{"__symbolic":"method"}],"headAsync":[{"__symbolic":"method"}],"_requestCoreAsync":[{"__symbolic":"method"}],"getObservable":[{"__symbolic":"method"}],"postObservable":[{"__symbolic":"method"}],"putObservable":[{"__symbolic":"method"}],"deleteObservable":[{"__symbolic":"method"}],"patchObservable":[{"__symbolic":"method"}],"headObservable":[{"__symbolic":"method"}],"_requestCoreObservable":[{"__symbolic":"method"}],"_convertUrl":[{"__symbolic":"method"}],"_modifyOptions":[{"__symbolic":"method"}],"_appendGlobalHeaders":[{"__symbolic":"method"}],"_tryAppendRegisteredCookiesToCustomHeaders":[{"__symbolic":"method"}],"_invokeRequestInterceptorsAsync":[{"__symbolic":"method"}],"_invokeResponseInterceptorsAsync":[{"__symbolic":"method"}],"_convertAngularHeadersToHttpClientHeaders":[{"__symbolic":"method"}],"_updateAngularHeadersFromHttpClientHeaders":[{"__symbolic":"method"}]}}}}]