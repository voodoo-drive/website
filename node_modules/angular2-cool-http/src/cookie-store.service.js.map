{"version":3,"file":"cookie-store.service.js","sourceRoot":"","sources":["../../src/cookie-store.service.ts"],"names":[],"mappings":";;AAAA,IAAA;;;IAKS,+BAAS,GAAhB,UAAiB,GAAW;QAC1B,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAElD,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;KAC9B;IAEM,yCAAmB,GAA1B;QACE,IAAI,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC;QAEvC,EAAE,CAAC,CAAC,gBAAgB,KAAK,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;SACtC;QAED,IAAI,CAAC,2BAA2B,GAAG,gBAAgB,CAAC;QACpD,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,OAAO,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE3D,GAAG,CAAC,CAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAArB,IAAI,MAAM,gBAAA;gBACb,IAAI,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBAE3C,EAAE,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,UAAU,GAAG,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;oBAE1F,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;iBACvH;aACF;SACF;QAED,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC;KACtC;IAEc,iCAAqB,GAApC,UAAqC,YAAoB;QACvD,IAAI,CAAC;YACH,MAAM,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;SACzC;QACD,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACT,MAAM,CAAC,YAAY,CAAC;SACrB;KACF;sBA7CH;IA8CC,CAAA;AA9CY,kCAAW","sourcesContent":["export class CookieStore {\r\n  lastReadRawCookieCollection: string;\r\n\r\n  lastReadCookieCollection: any;\r\n\r\n  public getCookie(key: string): string {\r\n    let cookieCollection = this.getCookieCollection();\r\n\r\n    return cookieCollection[key];\r\n  }\r\n\r\n  public getCookieCollection(): any {\r\n    let currentRawCookie = document.cookie;\r\n\r\n    if (currentRawCookie === this.lastReadRawCookieCollection) {\r\n      return this.lastReadCookieCollection;\r\n    }\r\n\r\n    this.lastReadRawCookieCollection = currentRawCookie;\r\n    this.lastReadCookieCollection = {};\r\n\r\n    if (this.lastReadRawCookieCollection.indexOf('; ') !== -1) {\r\n      let cookies = this.lastReadRawCookieCollection.split('; ');\r\n\r\n      for (let cookie of cookies) {\r\n        let indexOfEqualSign = cookie.indexOf('=');\r\n\r\n        if (indexOfEqualSign > 0) {\r\n          let cookieName = CookieStore.tryDecodeUriComponent(cookie.substring(0, indexOfEqualSign));\r\n\r\n          this.lastReadCookieCollection[cookieName] = CookieStore.tryDecodeUriComponent(cookie.substring(indexOfEqualSign + 1));\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.lastReadCookieCollection;\r\n  }\r\n\r\n  private static tryDecodeUriComponent(uriComponent: string): string {\r\n    try {\r\n      return decodeURIComponent(uriComponent);\r\n    }\r\n    catch (e) {\r\n      return uriComponent;\r\n    }\r\n  }\r\n}"]}